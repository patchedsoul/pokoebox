image: "rust:slim"

stages:
  - check
  - build
  - test

# Variable defaults
variables:
  RUST_VERSION: stable
  RUST_TARGET: x86_64-unknown-linux-gnu

# Cache rust/cargo/build artifacts
cache:
  key: "$CI_PIPELINE_ID-$RUST_VERSION"
  paths:
    - /usr/local/cargo/registry/
    - /usr/local/rustup/toolchains/
    - /usr/local/rustup/update-hashes/
    - target/

# Install compiler and OpenSSL dependencies
before_script:
  - apt-get update
  - apt-get upgrade -yqq
  - apt-get install -y --no-install-recommends libgtk-3-dev
  - |
    rustup install $RUST_VERSION
    rustup default $RUST_VERSION
    rustup target add $RUST_TARGET
  - |
    rustc --version
    cargo --version

# Check on stable, beta and nightly 
.check-base: &check-base
  stage: check
  script:
    - cd ./pokoebox-player
    - cargo check --verbose
    - cargo check --no-default-features --verbose
    - cargo check --no-default-features --features bluetooth --verbose
    - cargo check --no-default-features --features rpi --verbose
check-stable:
  <<: *check-base
check-beta:
  <<: *check-base
  variables:
    RUST_VERSION: beta
check-nightly:
  <<: *check-base
  variables:
    RUST_VERSION: nightly
check-old:
  <<: *check-base
  variables:
    RUST_VERSION: "1.40.0"

# Build using Rust stable
build-x86_64-linux-gnu:
  stage: build
  needs: []
  script:
    # Build
    - (cd ./pokoebox-player && cargo build --target=$RUST_TARGET --release --verbose)

    # Prepare the release artifact, strip it
    - mv pokoebox-player/target/$RUST_TARGET/release/pokoebox-player ./pokoebox-player-$RUST_TARGET
    - ls -lah ./pokoebox-player-$RUST_TARGET
    - strip -g ./pokoebox-player-$RUST_TARGET
  artifacts:
    name: pokoebox-player-x86_64-linux-gnu
    paths:
      - ./pokoebox-player-$RUST_TARGET
    expire_in: 1 month

# # Build a static version
# build-x86_64-linux-musl:
#   stage: build
#   needs:
#     - check-stable
#   variables:
#     RUST_TARGET: x86_64-unknown-linux-musl
#     PKG_CONFIG_ALLOW_CROSS: 1
#   script:
#     # Install dependencies
#     - apt-get install -y musl-tools

#     # Build
#     - (cd ./pokoebox-player && cargo build --target=$RUST_TARGET --release --verbose)

#     # Prepare the release artifact, strip it
#     - mv pokoebox-player/target/$RUST_TARGET/release/pokoebox-player ./pokoebox-player-$RUST_TARGET
#     - ls -lah ./pokoebox-player-$RUST_TARGET
#     - strip -g ./pokoebox-player-$RUST_TARGET
#   artifacts:
#     name: pokoebox-player-x86_64-linux-musl
#     paths:
#       - ./pokoebox-player-$RUST_TARGET
#     expire_in: 1 month

# Build for Raspbarry Pi
build-armv7-linux-gnueabihf:
  stage: build
  needs: []
  variables:
    RUST_TARGET: armv7-unknown-linux-gnueabihf
    CARGO_TARGET_ARMV7_UNKNOWN_LINUX_GNUEABIHF_LINKER: arm-linux-gnueabihf-gcc
    PKG_CONFIG_ALLOW_CROSS: 1
    PKG_CONFIG_PATH: /usr/lib/arm-linux-gnueabihf/pkgconfig/
  script:
    # Install dependencies
    - dpkg --add-architecture armhf
    - apt-get update
    - apt-get upgrade -yqq
    - apt-get install -y --no-install-recommends gcc-arm-linux-gnueabihf libgtk-3-dev:armhf

    # Build
    - (cd ./pokoebox-player && cargo build --target=$RUST_TARGET --release --verbose)

    # Prepare the release artifact
    - mv pokoebox-player/target/$RUST_TARGET/release/pokoebox-player ./pokoebox-player-$RUST_TARGET
    - ls -lah ./pokoebox-player-$RUST_TARGET
  artifacts:
    name: pokoebox-player-armv7-linux-gnueabihf
    paths:
      - ./pokoebox-player-$RUST_TARGET
    expire_in: 1 month

# Run the unit tests through Cargo
test-cargo:
  stage: test
  needs:
    - check-stable
  dependencies: []
  script:
    - cd ./pokoebox-player
    - cargo test --verbose
